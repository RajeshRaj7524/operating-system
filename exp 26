#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/stat.h>
#include <unistd.h>

void createFile(const char *filename) {
    FILE *file = fopen(filename, "w");
    if (file == NULL) {
        perror("Error creating file");
        return;
    }
    printf("File '%s' created successfully.\n", filename);
    fclose(file);
}

void writeFile(const char *filename, const char *data) {
    FILE *file = fopen(filename, "w");
    if (file == NULL) {
        perror("Error opening file for writing");
        return;
    }
    fprintf(file, "%s", data);
    printf("Data written to file '%s'.\n", filename);
    fclose(file);
}

void readFile(const char *filename) {
    char buffer[1024];
    FILE *file = fopen(filename, "r");
    if (file == NULL) {
        perror("Error opening file for reading");
        return;
    }
    printf("Contents of '%s':\n", filename);
    while (fgets(buffer, sizeof(buffer), file) != NULL) {
        printf("%s", buffer);
    }
    fclose(file);
}

void appendToFile(const char *filename, const char *data) {
    FILE *file = fopen(filename, "a");
    if (file == NULL) {
        perror("Error opening file for appending");
        return;
    }
    fprintf(file, "%s", data);
    printf("Data appended to file '%s'.\n", filename);
    fclose(file);
}

void deleteFile(const char *filename) {
    if (remove(filename) == 0) {
        printf("File '%s' deleted successfully.\n", filename);
    } else {
        perror("Error deleting file");
    }
}

void displayFileProperties(const char *filename) {
    struct stat fileStat;
    if (stat(filename, &fileStat) == -1) {
        perror("Error getting file status");
        return;
    }
    printf("File '%s' properties:\n", filename);
    printf("Size: %ld bytes\n", fileStat.st_size);
    printf("Permissions: %o\n", fileStat.st_mode & 0777);  // Display file permissions in octal
}

int main() {
    const char *filename = "sample.txt";

    // 1. Create a file
    createFile(filename);

    // 2. Write to the file
    const char *writeData = "This is some initial text in the file.\n";
    writeFile(filename, writeData);

    // 3. Read from the file
    readFile(filename);

    // 4. Append data to the file
    const char *appendData = "This is the appended text.\n";
    appendToFile(filename, appendData);

    // 5. Read the file again after appending
    readFile(filename);

    // 6. Display file properties
    displayFileProperties(filename);

    // 7. Delete the file
    deleteFile(filename);

    return 0;
}
